0 info it worked if it ends with ok
1 verbose cli [ 'node', '/src/nvm/v0.8.9/bin/npm', 'publish' ]
2 info using npm@1.1.61
3 info using node@v0.8.9
4 verbose publish [ '.' ]
5 verbose read json /git/js/anvil/anvil.js/package.json
6 verbose cache add [ '.', null ]
7 silly cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { pathname: '.', path: '.', href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/alex/.npm/3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ '/var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/tmp.tgz
14 verbose folder .
15 info prepublish anvil.js@0.8.14
16 silly lockFile 585f2ac1-4075-0-15522847115062177-tmp-tgz /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/tmp.tgz
17 verbose lock /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/tmp.tgz /Users/alex/.npm/585f2ac1-4075-0-15522847115062177-tmp-tgz.lock
18 silly lockFile 585f2ac1-4075-0-15522847115062177-tmp-tgz /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/tmp.tgz
19 verbose tar unpack /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/tmp.tgz
20 silly lockFile b966670a-4075-0-15522847115062177-package /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/package
21 verbose lock /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/package /Users/alex/.npm/b966670a-4075-0-15522847115062177-package.lock
22 silly gunzTarPerm modes [ '755', '644' ]
23 silly gunzTarPerm extractEntry package.json
24 silly gunzTarPerm extractEntry .npmignore
25 silly gunzTarPerm extractEntry README.md
26 silly gunzTarPerm extractEntry header.js
27 silly gunzTarPerm extractEntry init.js
28 silly gunzTarPerm extractEntry lib/activityManager.js
29 silly gunzTarPerm extractEntry lib/config.js
30 silly gunzTarPerm extractEntry lib/consoleLogger.js
31 silly gunzTarPerm extractEntry lib/eventAggregator.js
32 silly gunzTarPerm extractEntry lib/fileCrawler.js
33 silly gunzTarPerm extractEntry lib/cli.js
34 silly gunzTarPerm extractEntry lib/fs.mock.js
35 silly gunzTarPerm extractEntry lib/log.js
36 silly gunzTarPerm extractEntry lib/plugin.js
37 silly gunzTarPerm extractEntry lib/pluginHarness.js
38 silly gunzTarPerm extractEntry lib/pluginLocator.js
39 silly gunzTarPerm extractEntry lib/bus.js
40 silly gunzTarPerm extractEntry lib/pluginManager.js
41 silly gunzTarPerm extractEntry lib/api.js
42 silly gunzTarPerm extractEntry lib/scheduler.js
43 silly gunzTarPerm extractEntry lib/anvil.js
44 silly gunzTarPerm extractEntry lib/utility.js
45 silly gunzTarPerm extractEntry lib/fileSystem.js
46 silly gunzTarPerm extractEntry build.json
47 silly gunzTarPerm extractEntry spec/activityManager.spec.js
48 silly gunzTarPerm extractEntry spec/bus.spec.js
49 silly gunzTarPerm extractEntry spec/eventAggregator.spec.js
50 silly gunzTarPerm extractEntry spec/fakeManager.js
51 silly gunzTarPerm extractEntry spec/fileLoader.spec.js
52 silly gunzTarPerm extractEntry spec/anvil.spec.js
53 silly gunzTarPerm extractEntry spec/pluginLocator.spec.js
54 silly gunzTarPerm extractEntry spec/pluginManager.spec.js
55 silly gunzTarPerm extractEntry spec/project.setup.js
56 silly gunzTarPerm extractEntry spec/plugins.spec.js
57 silly gunzTarPerm extractEntry spec/scheduler.spec.js
58 silly gunzTarPerm extractEntry spec/log.mock.js
59 silly gunzTarPerm extractEntry spec/plugins/testPlugin/package.json
60 silly gunzTarPerm extractEntry spec/plugins/testPlugin/plugin.js
61 silly gunzTarPerm extractEntry bin/anvil
62 silly gunzTarPerm extractEntry src/activityManager.js
63 silly gunzTarPerm extractEntry src/config.js
64 silly gunzTarPerm extractEntry src/consoleLogger.js
65 silly gunzTarPerm extractEntry src/eventAggregator.js
66 silly gunzTarPerm extractEntry src/fileCrawler.js
67 silly gunzTarPerm extractEntry src/cli.js
68 silly gunzTarPerm extractEntry src/fs.mock.js
69 silly gunzTarPerm extractEntry src/log.js
70 silly gunzTarPerm extractEntry src/plugin.js
71 silly gunzTarPerm extractEntry src/pluginHarness.js
72 silly gunzTarPerm extractEntry src/pluginLocator.js
73 silly gunzTarPerm extractEntry src/bus.js
74 silly gunzTarPerm extractEntry src/pluginManager.js
75 silly gunzTarPerm extractEntry src/api.js
76 silly gunzTarPerm extractEntry src/scheduler.js
77 silly gunzTarPerm extractEntry src/anvil.js
78 silly gunzTarPerm extractEntry src/utility.js
79 silly gunzTarPerm extractEntry src/fileSystem.js
80 verbose read json /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/package/package.json
81 silly lockFile b966670a-4075-0-15522847115062177-package /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/package
82 verbose from cache /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/package/package.json
83 verbose tar pack [ '/Users/alex/.npm/anvil.js/0.8.14/package.tgz',
83 verbose tar pack   '/var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/package' ]
84 verbose tarball /Users/alex/.npm/anvil.js/0.8.14/package.tgz
85 verbose folder /var/folders/1d/p2zgg8jd7716_93v7b1vz68m0000gn/T/npm-71699/1350421174075-0.15522847115062177/package
86 silly lockFile 1b5dcdfa--npm-anvil-js-0-8-14-package-tgz /Users/alex/.npm/anvil.js/0.8.14/package.tgz
87 verbose lock /Users/alex/.npm/anvil.js/0.8.14/package.tgz /Users/alex/.npm/1b5dcdfa--npm-anvil-js-0-8-14-package-tgz.lock
88 silly lockFile 1b5dcdfa--npm-anvil-js-0-8-14-package-tgz /Users/alex/.npm/anvil.js/0.8.14/package.tgz
89 silly lockFile 52526746-alex-npm-anvil-js-0-8-14-package /Users/alex/.npm/anvil.js/0.8.14/package
90 verbose lock /Users/alex/.npm/anvil.js/0.8.14/package /Users/alex/.npm/52526746-alex-npm-anvil-js-0-8-14-package.lock
91 silly lockFile 52526746-alex-npm-anvil-js-0-8-14-package /Users/alex/.npm/anvil.js/0.8.14/package
92 verbose tar unpack /Users/alex/.npm/anvil.js/0.8.14/package.tgz
93 silly lockFile 52526746-alex-npm-anvil-js-0-8-14-package /Users/alex/.npm/anvil.js/0.8.14/package
94 verbose lock /Users/alex/.npm/anvil.js/0.8.14/package /Users/alex/.npm/52526746-alex-npm-anvil-js-0-8-14-package.lock
95 silly gunzTarPerm modes [ '755', '644' ]
96 silly gunzTarPerm extractEntry package.json
97 silly gunzTarPerm extractEntry .npmignore
98 silly gunzTarPerm extractEntry README.md
99 silly gunzTarPerm extractEntry header.js
100 silly gunzTarPerm extractEntry init.js
101 silly gunzTarPerm extractEntry bin/anvil
102 silly gunzTarPerm extractEntry build.json
103 silly gunzTarPerm extractEntry lib/activityManager.js
104 silly gunzTarPerm extractEntry lib/config.js
105 silly gunzTarPerm extractEntry lib/consoleLogger.js
106 silly gunzTarPerm extractEntry lib/eventAggregator.js
107 silly gunzTarPerm extractEntry lib/fileCrawler.js
108 silly gunzTarPerm extractEntry lib/cli.js
109 silly gunzTarPerm extractEntry lib/fs.mock.js
110 silly gunzTarPerm extractEntry lib/log.js
111 silly gunzTarPerm extractEntry lib/plugin.js
112 silly gunzTarPerm extractEntry lib/pluginHarness.js
113 silly gunzTarPerm extractEntry lib/pluginLocator.js
114 silly gunzTarPerm extractEntry lib/bus.js
115 silly gunzTarPerm extractEntry lib/pluginManager.js
116 silly gunzTarPerm extractEntry lib/api.js
117 silly gunzTarPerm extractEntry lib/scheduler.js
118 silly gunzTarPerm extractEntry lib/anvil.js
119 silly gunzTarPerm extractEntry lib/utility.js
120 silly gunzTarPerm extractEntry lib/fileSystem.js
121 silly gunzTarPerm extractEntry spec/activityManager.spec.js
122 silly gunzTarPerm extractEntry spec/bus.spec.js
123 silly gunzTarPerm extractEntry spec/eventAggregator.spec.js
124 silly gunzTarPerm extractEntry spec/fakeManager.js
125 silly gunzTarPerm extractEntry spec/fileLoader.spec.js
126 silly gunzTarPerm extractEntry spec/anvil.spec.js
127 silly gunzTarPerm extractEntry spec/pluginLocator.spec.js
128 silly gunzTarPerm extractEntry spec/pluginManager.spec.js
129 silly gunzTarPerm extractEntry spec/project.setup.js
130 silly gunzTarPerm extractEntry spec/plugins.spec.js
131 silly gunzTarPerm extractEntry spec/scheduler.spec.js
132 silly gunzTarPerm extractEntry spec/log.mock.js
133 silly gunzTarPerm extractEntry spec/plugins/testPlugin/package.json
134 silly gunzTarPerm extractEntry spec/plugins/testPlugin/plugin.js
135 silly gunzTarPerm extractEntry src/activityManager.js
136 silly gunzTarPerm extractEntry src/config.js
137 silly gunzTarPerm extractEntry src/consoleLogger.js
138 silly gunzTarPerm extractEntry src/eventAggregator.js
139 silly gunzTarPerm extractEntry src/fileCrawler.js
140 silly gunzTarPerm extractEntry src/cli.js
141 silly gunzTarPerm extractEntry src/fs.mock.js
142 silly gunzTarPerm extractEntry src/log.js
143 silly gunzTarPerm extractEntry src/plugin.js
144 silly gunzTarPerm extractEntry src/pluginHarness.js
145 silly gunzTarPerm extractEntry src/pluginLocator.js
146 silly gunzTarPerm extractEntry src/bus.js
147 silly gunzTarPerm extractEntry src/pluginManager.js
148 silly gunzTarPerm extractEntry src/api.js
149 silly gunzTarPerm extractEntry src/scheduler.js
150 silly gunzTarPerm extractEntry src/anvil.js
151 silly gunzTarPerm extractEntry src/utility.js
152 silly gunzTarPerm extractEntry src/fileSystem.js
153 verbose read json /Users/alex/.npm/anvil.js/0.8.14/package/package.json
154 silly lockFile 52526746-alex-npm-anvil-js-0-8-14-package /Users/alex/.npm/anvil.js/0.8.14/package
155 silly shasum updated bytes 37488
156 info shasum 026ca2d3e2498d7d1b2662cbc4a8657c294dfaba
156 info shasum /Users/alex/.npm/anvil.js/0.8.14/package.tgz
157 verbose from cache /Users/alex/.npm/anvil.js/0.8.14/package/package.json
158 verbose chmod /Users/alex/.npm/anvil.js/0.8.14/package.tgz 644
159 verbose chown /Users/alex/.npm/anvil.js/0.8.14/package.tgz [ 501, 20 ]
160 silly lockFile 3a52ce78- .
161 silly publish { author:
161 silly publish    { name: 'Alex Robson',
161 silly publish      email: 'alex@sharplearningcurve.com',
161 silly publish      url: 'http://sharplearningcurve.com' },
161 silly publish   name: 'anvil.js',
161 silly publish   description: 'an extensible build system',
161 silly publish   version: '0.8.14',
161 silly publish   repository: { type: 'git', url: 'git://github.com/appendto/anvil.js.git' },
161 silly publish   engines: { node: '~0.8.3' },
161 silly publish   dependencies:
161 silly publish    { colors: '0.6.0',
161 silly publish      commander: '1.0.0',
161 silly publish      'fs-watch-tree': '0.2.2',
161 silly publish      machina: '~0.2.0',
161 silly publish      mkdirp: '0.3.3',
161 silly publish      postal: '~0.7.0',
161 silly publish      should: '0.6.3',
161 silly publish      underscore: '~1.4.0' },
161 silly publish   devDependencies: {},
161 silly publish   optionalDependencies: {},
161 silly publish   bin: { anvil: './bin/anvil' },
161 silly publish   main: './lib/api.js',
161 silly publish   scripts:
161 silly publish    { install: 'npm link npm --local',
161 silly publish      postinstall: 'node ./init.js' },
161 silly publish   readme: '# Anvil\n\nAnvil started as a way to build a single javascript module from several source files. Build tools that require a lot of explicit/declarative instructions distract from getting work on the project done.\n\nAnvil has been rewritten as a general build system with a plugin architecture. It should be easy to add features or change almost any behavior as needed.\n\nThe new version of anvil is not entirely backwards compatible. If you want to continue using the old version, you can still install it from npm by specifying the version number ( 0.7.9 ). If you need help converting your project to the new version, please send me an e-mail or submit an issue to the project and I\'ll help as I have time.\n\n## What Does It Do?\n\nAll parts of the build process are implemented as plugins. Some plugins ship along with anvil\'s source so that it can do _something_ out of the box. Most of the interesting features will likely be plugins that you install.\n\nA baseline install can do the following:\n\n* Install, remove, enable or disable plugins\n* Automatically install any plugins your build file defines as dependencies\n* Run local tasks (follows the same api as a plugin)\n* Continuously and incrementally build the project as files change\n* Create default build files based on installed plugins\n* Combine resource files through a comment-based import syntax\n* Concat resource files in specified order using\n    * JSON or YAML file that lists files to create from other files\n    * individual JSON or YAML files\n* Replace tokens (with customizable syntax) in source with \n    * values from package.json\n    * JSON or YAML key/value files\n* Add file headers to final build output based on output file type\n\n## Installation\n\n    npm install anvil.js -g\n\n## By Convention\n\nWithout a build file, anvil will use its default conventions to attempt to build your project.\n\n## The Build File ( minimalist example )\n\n    {\n        "source": "src",\n        "spec": "spec"\n        "output":  "build"\n        "dependencies": [ "anvil.mocha" ]\n    }\n\n* source is the path where _all_ project source belongs; this can be a flat or complex hierarchy\n* output is a list of paths to copy build output to.\n* spec is the folder where test specifications can be found\n* dependencies is a list of anvil plugin names that should be installed before the build can proceed\n\n## Building By Convention\n\nIf you don\'t specify your own build file, anvil assumes you intend to use a build.json file. If one isn\'t present, it will use its own conventions to build your project. If that\'s all you need, great! Chances are you\'ll want a build.json that\'s configured for your specific project.\n\n## Writing New Build Files\n\nKeeping up with all the plugin defaults can be difficult. To see what\'s available by default for each plugin, you can write a new build file for customization.\n\n    anvil --write {name}\n\nThis command creates a build file in the current directory at {name}.json. It will include all the default settings for all the installed and built-in plugins.\n\n## Combining source files, Import Style\n\nAnvil allows you to combine source files by using a commented command\n\n**Javascript**\n\n    // import("dependency.{ext}");\n\n**Coffeescript**\n\n    ### import "dependency.{ext}" ###\n\n**Stylus, LESS, CSS**\n\n    CSS: \t\t\t/* import "dependency.{ext}" */ \n    LESS, Stylus:\t// import "dependency.{ext}\n\nWhen you use anvil to compile your project, it will traverse all the files in your source directory and combine them so that your top level files are what get output. \n\n**Warning** Currently, anvil is not clever enough to detect circular dependencies created via import statements and it will _shatter your world_ if you do this.\n\n## Combining source files, Concatenation Style\n\nAnvil provides you with two ways to drive concatenation: yaml lists or individual yaml files\n\n### List Files\nAnvil allows you to combine source files by listing the order of concatenation in a JSON or YAML format. Note: the paths must all be absolute OR relative to the top level of your source folder.\n\n#### JSON Format\n    {\n        "./file1.js": [ "./file1a.js", "./file1b.js", "./file1c.js" ],\n        "./file2.js": [ "./file2a.js", "./file2b.js", "./file2c.js" ],\n    }\n\n#### YAML Format\n\n    ./file1.js:\n        - ./file1a.js\n        - ./file1b.js\n        - ./file1c.js\n\n    file2.js:\n        - ./file2a.js\n        - ./file2b.js\n        - ./file2c.js\n\n\nAnvi will create file1.js and file2.js by concatenating the corresponding list of files in the order they appear.\n\n### Individual Files\nThis approach allows you to create a list of files to concatenate to create the final outcome. The name and location of the file will be identical to the original but anvil will strip the .json or .yaml extension off.\n\n#### JSON Format\n    { "imports": [ "./file1a.js", "./file1c.js", "./file1c.js" ] }\n\n#### YAML Format\nfile1.js.yaml\'s contents:\n\n    - ./file1a.js    \n    - ./file1b.js    \n    - ./file1c.js    \n\n\nEach example would produce file1.js and concat each of the three listed files together to create its contents. ***NOTE***: The paths in an individual concat file _must_ be relative to the concat file itself.\n\n## Building With Specific Build Files\n\nTo build with a specific build file\n\n    anvil -b <buildfile>\n\n## Continuous Integration\n\nAnvil will watch your source directory for changes and incrementally rebuild changed files ( and any affected files ).\n\n    anvil --ci\n\nYou can configure a build to always run in this mode by adding the following JSON snippet to your build.json file:\n    \n    "fileLoader": {\n        "continuous": "true"\n    }\n\n## Console log\n\nAnvil uses color-coded messages to let you see what\'s happening during the build. Here\'s the color key:\n\n    magenta - debug\n    default - events\n    blue - build steps\n    green - success\n    yellow - warning\n    red - error\n\nBy default anvil will print everything but debug and warning messages unless you provide a --verbose argument or add this to your build.json :\n\n    "log": {\n        "debug": true\n    }\n\nYou can tell anvil to run in quiet mode (it will still print errors (red) and step completions (green) )\n\n    anvil -q\n\n# Plugins & Tasks\nAnvil has two primary points for extension: plugins (things installed by anvil from npm) and tasks (local plugins).\n\n## Plugins\nAnvil installs plugins from npm to a global location: ~/.anvilplugins/node_modules and keeps a manifest of installed and enabled plugins at: ~/.anvilplugins/plugins.json.\n\nOnce a plugin is installed, anvil will load it and use it in the build process unless you:\n  * Disable it globally with \'\'\'anvil disable {pluginname}\'\'\' at the command line\n  * Explicitly include other plugins besides it in the build file\n  * Explicitly exclude it in the build file\n\n### When Plugins Misbehave\nAnvil will attempt to automatically disable a plugin that throws an exception that would break the build. This is to try and prevent an installed plugin from breaking your build system.\n\n### Installing & Uninstalling\nAnvil provides simple command line arguments to install or uninstall plugins to itself at a global level:\n\n    anvil install {pluginname}\n\nor\n\n    anvil uninstall {pluginname}\n\nYou can also install plugins from a file path using the relative path to the plugin directory in place of the plugin\'s name.\n\n### Enabling & Disabling\nAnvil provides command line arguments that allow you to enable or disable plugins at the global level:\n\n    anvil enable {pluginname}\n\nor\n\n    anvil disable {pluginname}\n\nDisabled plugins should never be loaded into a build session.\n\n### Updating Plugins\nAnvil will check npm for updates to all globally installed plugins with one simple command:\n\n    anvil update\n\nThis command will take longer the more plugins you have installed and the more plugins which require updates from npm. Note: anvil automatically does this every time you install a new anvil version from npm.\n\n\n### Including Specific Plugins\nAnvil\'s build file now supports explicit inclusion only so that only plugins which you specify in the build file will be run as part of the build.\n\n    "plugins": {\n        "include": [ "anvil.one", "anvil.two", ... ]\n    }\n\n### Excluding Specified Plugins\nAnvil also supports explicit exclusion so that all plugins except for those you specify in the build file will be run as part of the build.\n\n    "plugins": {\n        "exclude": [ "anvil.one", "anvil.two", ... ]\n    }\n\n### Installing Plugins Locally For A Project\nYou can now install a plugin locally to a project using npm like so:\n\n    npm install {pluginname}\n\nIn order for anvil to know about the plugin, you must add the following option to your build file:\n\n    "plugins": {\n        "local": [ "myLocallyInstalledPluginName" ]\n    }\n\nPlease note: if you have already installed a global version of the plugin, anvil will always prefer the locally installed plugin; if you wish to use a global version of the plugin, you must use npm to uninstall the local version. Anvil does not manage locally installed plugins.\n\n# Contributors\n\nSpecial thanks to the following individuals who have contributed source code or ideas to help make anvil less buggy and more useful:\n\n * Jim Cowart\n * Aaron McCall\n * Mike Stenhouse\n * Robert Messerle\n * Mike Hostetler\n * Jonathan Creamer\n * Brian Edgerton\n * Elijah Manor\n * Doug Neiner\n * Derick Bailey',
161 silly publish   _id: 'anvil.js@0.8.14',
161 silly publish   dist: { shasum: '026ca2d3e2498d7d1b2662cbc4a8657c294dfaba' } }
162 verbose url raw anvil.js
163 verbose url resolving [ 'https://registry.npmjs.org/', './anvil.js' ]
164 verbose url resolved https://registry.npmjs.org/anvil.js
165 info trying registry request attempt 1 at 15:59:35
166 http PUT https://registry.npmjs.org/anvil.js
167 http 409 https://registry.npmjs.org/anvil.js
168 verbose url raw anvil.js
169 verbose url resolving [ 'https://registry.npmjs.org/', './anvil.js' ]
170 verbose url resolved https://registry.npmjs.org/anvil.js
171 info trying registry request attempt 1 at 15:59:35
172 http GET https://registry.npmjs.org/anvil.js
173 http 200 https://registry.npmjs.org/anvil.js
174 error publish fail Cannot publish over existing version.
174 error publish fail Bump the 'version' field, set the --force flag, or
174 error publish fail     npm unpublish 'anvil.js@0.8.14'
174 error publish fail and try again
175 error System Darwin 11.4.0
176 error command "node" "/src/nvm/v0.8.9/bin/npm" "publish"
177 error cwd /git/js/anvil/anvil.js
178 error node -v v0.8.9
179 error npm -v 1.1.61
180 error code EPUBLISHCONFLICT
181 verbose exit [ 1, true ]
